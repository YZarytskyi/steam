{"version":3,"file":"static/js/211.22823e26.chunk.js","mappings":"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","sources":["components/Pagination/Pagination.styled.ts","components/Pagination/Pagination.tsx","pages/Favorites/Favorites.styled.ts","pages/Favorites/Favorites.tsx","pages/Home/GameCard.tsx","pages/Home/Home.styled.ts"],"sourcesContent":["import styled from \"styled-components\";\r\n\r\nexport const StyledPaginateContainer = styled.div`\r\n  .pagination {\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    gap: 8px;\r\n  }\r\n  .break-me {\r\n    cursor: default;\r\n  }\r\n  .link {\r\n    min-width: 30px;\r\n    min-height: 30px;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    padding: 5px;\r\n    border-radius: 50%;\r\n    background-color: #5b5e63;\r\n    border: none;\r\n    color: #fff;\r\n    cursor: pointer;\r\n    user-select: none;\r\n    font-size: 12px;\r\n    line-height: calc(15 / 12);\r\n  }\r\n  .active {\r\n    background-color: #17323a;\r\n  }\r\n  .previous,\r\n  .next {\r\n    min-width: 30px;\r\n    min-height: 30px;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    border-radius: 50%;\r\n    background-color: #5b5e63;\r\n  }\r\n`;","import React from \"react\";\r\nimport Pagination from \"react-js-pagination\";\r\nimport { useAppSelector } from \"../../hooks/redux-hooks\";\r\nimport * as S from \"./Pagination.styled\";\r\n\r\ninterface PaginationProps {\r\n  currentPage: number;\r\n  setCurrentPage: React.Dispatch<React.SetStateAction<number>>\r\n}\r\n\r\nexport const PaginationGames = ({currentPage, setCurrentPage}: PaginationProps): JSX.Element => {\r\n  const games = useAppSelector((state) => state.games.games);\r\n\r\n  return (\r\n    <S.StyledPaginateContainer>\r\n      <Pagination\r\n          activePage={currentPage}\r\n          itemsCountPerPage={4}\r\n          totalItemsCount={games.length}\r\n          pageRangeDisplayed={3}\r\n          innerClass='pagination'\r\n          itemClassPrev='previous'\r\n          itemClassNext='next'\r\n          itemClass=\"link\"\r\n          activeLinkClass=\"active\"\r\n          hideFirstLastPages={true}\r\n          onChange={(number: number) => setCurrentPage(number)}\r\n      />\r\n    </S.StyledPaginateContainer>\r\n  );\r\n}\r\n","import { Link } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\n\r\nexport const FavoritesSection = styled.section`\r\n  padding: 24px 27px;\r\n`;\r\n\r\nexport const FavoritesContainer = styled.div`\r\n  margin: 0 auto;\r\n  max-width: 1171px;\r\n  padding: 0 26px;\r\n`;\r\n\r\nexport const GamesList = styled.ul`\r\n  display: flex;\r\n  gap: 21px;\r\n  margin-bottom: 30px;\r\n`;","import { useState } from \"react\";\r\nimport { PaginationGames } from \"../../components/Pagination/Pagination\";\r\nimport { useAppSelector } from \"../../hooks/redux-hooks\";\r\nimport { GameCard } from \"../Home/GameCard\";\r\nimport * as S from \"./Favorites.styled\";\r\n\r\nconst Favorites = () => {\r\n  const favoriteGames = useAppSelector((state) => state.games.favoriteGames);\r\n  const [currentPage, setCurrentPage] = useState<number>(1);\r\n\r\n  return (\r\n    <S.FavoritesSection>\r\n      <S.FavoritesContainer>\r\n        <S.GamesList>\r\n          {favoriteGames.slice(0, 4).map((game) => (\r\n            <GameCard key={game.appId} game={game} />\r\n          ))}\r\n        </S.GamesList>\r\n        {favoriteGames.length > 4 && (\r\n          <PaginationGames\r\n            currentPage={currentPage}\r\n            setCurrentPage={setCurrentPage}\r\n          />\r\n        )}\r\n      </S.FavoritesContainer>\r\n    </S.FavoritesSection>\r\n  );\r\n};\r\n\r\nexport default Favorites;\r\n","import { Game } from \"types/types\";\r\nimport sprite from \"assets/icons.svg\";\r\nimport * as S from \"./Home.styled\";\r\nimport { useState } from \"react\";\r\nimport { useAppDispatch, useAppSelector } from \"hooks/redux-hooks\";\r\nimport {\r\n  addGameToFavorites,\r\n  removeGameFromFavorites,\r\n} from \"redux/slises/gamesSlice\";\r\n\r\ninterface GameCardProps {\r\n  game: Game;\r\n}\r\n\r\nconst GameCard = ({ game }: GameCardProps) => {\r\n  const favoriteGames = useAppSelector((state) => state.games.favoriteGames);\r\n  const dispatch = useAppDispatch();\r\n\r\n  const [isSelected, setIsSelected] = useState(() => {\r\n    const isGameSelected = favoriteGames.find(\r\n      (favoriteGame) => favoriteGame.appId === game.appId\r\n    );\r\n    if (isGameSelected) {\r\n      return true;\r\n    }\r\n    return false;\r\n  });\r\n\r\n  const onClickToggleFavorite: React.MouseEventHandler<SVGSVGElement> = (e) => {\r\n    e.preventDefault();\r\n    setIsSelected((state) => !state);\r\n    if (isSelected) {\r\n      dispatch(removeGameFromFavorites(game.appId));\r\n      return;\r\n    }\r\n    dispatch(addGameToFavorites(game));\r\n  };\r\n\r\n  return (\r\n    <S.GameItem>\r\n      <S.GameLink to={`/${game.appId}`}>\r\n        <S.GameImage src={game.imgUrl} alt={game.title} />\r\n        <S.GameTitle>{game.title}</S.GameTitle>\r\n        <S.GameDate>{game.released}</S.GameDate>\r\n        <S.GamePrice>{game.price}</S.GamePrice>\r\n        <S.HeartIcon\r\n          isSelected={isSelected}\r\n          onClick={onClickToggleFavorite}\r\n          role=\"button\"\r\n        >\r\n          <use href={`${sprite}#icon-heart`} />\r\n        </S.HeartIcon>\r\n        <S.PlayIconContainer isSelected={isSelected}>\r\n          <S.PlayIcon>\r\n            <use href={`${sprite}#icon-play-circle`} />\r\n          </S.PlayIcon>\r\n        </S.PlayIconContainer>\r\n      </S.GameLink>\r\n    </S.GameItem>\r\n  );\r\n};\r\n\r\nexport { GameCard };\r\n","import { Link } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\n\r\nexport const HomeSection = styled.section`\r\n  padding: 24px 27px;\r\n`;\r\n\r\nexport const HomeContainer = styled.div`\r\n  margin: 0 auto;\r\n  max-width: 1171px;\r\n  padding: 0 26px;\r\n`;\r\n\r\nexport const GamesList = styled.ul`\r\n  display: flex;\r\n  gap: 21px;\r\n  margin-bottom: 30px;\r\n`;\r\n\r\nexport const GameItem = styled.li`\r\n  position: relative;\r\n  width: calc((100% - 54px) / 4);\r\n  background-color: ${({ theme }) => theme.colors.secondary};\r\n  border-radius: 10px;\r\n`;\r\n\r\nexport const GameLink = styled(Link)`\r\n`;\r\n\r\nexport const GameImage = styled.img`\r\n  width: 100%;\r\n  height: 99px;\r\n  margin-bottom: 6px;\r\n  object-fit: cover;\r\n  border-radius: 10px;\r\n`;\r\n\r\nexport const GameTitle = styled.h2`\r\n  margin-left: 11px;\r\n  margin-bottom: 6px;\r\n  font-weight: 400;\r\n  font-size: 18px;\r\n  line-height: calc(22 / 18);\r\n`;\r\n\r\nexport const GameDate = styled.p`\r\n  margin-left: 11px;\r\n  margin-bottom: 5px;\r\n  font-size: 15px;\r\n  line-height: calc(18 / 15);\r\n`;\r\n\r\nexport const GamePrice = styled.p`\r\n  margin-left: 11px;\r\n  margin-bottom: 11px;\r\n  font-size: 14px;\r\n  line-height: calc(17 / 14);\r\n`;\r\n\r\ninterface IconsProps {\r\n  isSelected: boolean;\r\n}\r\n\r\nexport const HeartIcon = styled.svg<IconsProps>`\r\n  position: absolute;\r\n  right: 12.6px;\r\n  bottom: 7.3px;\r\n  width: 25px;\r\n  height: 25px;\r\n  cursor: pointer;\r\n  stroke-width: 3px;\r\n  stroke: ${({isSelected}) => isSelected ? '#DD1717' : '#FFFFFF'};\r\n  fill: ${({isSelected}) => isSelected ? '#DD1717' : 'transparent'};\r\n  transition: stroke 200ms cubic-bezier(0.39, 0.575, 0.565, 1),\r\n    fill 200ms cubic-bezier(0.39, 0.575, 0.565, 1);\r\n`;\r\n\r\nexport const PlayIconContainer = styled.div<IconsProps>`\r\n  position: absolute;\r\n  top: 76px;\r\n  right: 17px;\r\n  width: 47px;\r\n  height: 43px;\r\n  visibility: ${({isSelected}) => isSelected ? 'visible' : 'hidden'};\r\n  opacity: ${({isSelected}) => isSelected ? 1 : 0};\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  border-radius: 50%;\r\n  filter: drop-shadow(0px 4px 4px rgba(0, 0, 0, 0.25));\r\n  cursor: pointer;\r\n  background-color: ${({theme}) => theme.colors.primary};\r\n  transition: visibility 200ms cubic-bezier(0.39, 0.575, 0.565, 1),\r\n    opacity 200ms cubic-bezier(0.39, 0.575, 0.565, 1);\r\n`;\r\n\r\nexport const PlayIcon = styled.svg`\r\n  width: 43px;\r\n  height: 43px;\r\n  cursor: pointer;\r\n`;"],"names":["StyledPaginateContainer","styled","PaginationGames","currentPage","setCurrentPage","games","useAppSelector","state","Pagination","activePage","itemsCountPerPage","totalItemsCount","length","pageRangeDisplayed","innerClass","itemClassPrev","itemClassNext","itemClass","activeLinkClass","hideFirstLastPages","onChange","number","FavoritesSection","FavoritesContainer","GamesList","favoriteGames","useState","slice","map","game","GameCard","appId","dispatch","useAppDispatch","find","favoriteGame","isSelected","setIsSelected","to","src","imgUrl","alt","title","released","price","onClick","e","preventDefault","removeGameFromFavorites","addGameToFavorites","role","href","sprite","HomeSection","HomeContainer","GameItem","theme","colors","secondary","GameLink","Link","GameImage","GameTitle","GameDate","GamePrice","HeartIcon","PlayIconContainer","primary","PlayIcon"],"sourceRoot":""}