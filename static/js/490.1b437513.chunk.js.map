{"version":3,"file":"static/js/490.1b437513.chunk.js","mappings":"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","sources":["components/GameCard/GameCard.styled.ts","components/GameCard/GameCard.tsx","components/Home/Home.styled.ts","components/Home/Home.tsx","components/Pagination/Pagination.styled.ts","components/Pagination/Pagination.tsx","utils/paginationSliceItems.ts"],"sourcesContent":["import styled from \"styled-components\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport const GameItem = styled.li`\r\n  position: relative;\r\n  width: calc((100% - 54px) / 4);\r\n  background-color: ${({ theme }) => theme.colors.secondary};\r\n  border-radius: 10px;\r\n  @media screen and (max-width: 1170px) {\r\n    width: 100%;\r\n  }\r\n`;\r\n\r\nexport const GameLink = styled(Link)``;\r\n\r\nexport const GameImage = styled.img`\r\n  width: 100%;\r\n  height: 99px;\r\n  margin-bottom: 6px;\r\n  object-fit: cover;\r\n  border-radius: 10px;\r\n`;\r\n\r\nexport const GameTitle = styled.p`\r\n  min-height: 47px;\r\n  margin-left: 11px;\r\n  margin-bottom: 6px;\r\n  font-weight: 400;\r\n  font-size: 18px;\r\n  line-height: calc(22 / 18);\r\n`;\r\n\r\nexport const GameDate = styled.p`\r\n  margin-left: 11px;\r\n  margin-bottom: 5px;\r\n  font-size: 15px;\r\n  line-height: calc(18 / 15);\r\n`;\r\n\r\nexport const GamePrice = styled.p`\r\n  margin-left: 11px;\r\n  margin-bottom: 11px;\r\n  font-size: 14px;\r\n  line-height: calc(17 / 14);\r\n`;\r\n\r\ninterface IconsProps {\r\n  isSelected: boolean;\r\n}\r\n\r\nexport const HeartIcon = styled.svg<IconsProps>`\r\n  position: absolute;\r\n  right: 12.6px;\r\n  bottom: 7.3px;\r\n  width: 25px;\r\n  height: 25px;\r\n  cursor: pointer;\r\n  stroke-width: 3px;\r\n  stroke: ${({ isSelected }) => (isSelected ? \"#DD1717\" : \"#FFFFFF\")};\r\n  fill: ${({ isSelected }) => (isSelected ? \"#DD1717\" : \"transparent\")};\r\n  transition: stroke 200ms cubic-bezier(0.39, 0.575, 0.565, 1),\r\n    fill 200ms cubic-bezier(0.39, 0.575, 0.565, 1);\r\n`;\r\n\r\nexport const PlayIconContainer = styled.div<IconsProps>`\r\n  position: absolute;\r\n  top: 76px;\r\n  right: 17px;\r\n  width: 47px;\r\n  height: 43px;\r\n  visibility: ${({ isSelected }) => (isSelected ? \"visible\" : \"hidden\")};\r\n  opacity: ${({ isSelected }) => (isSelected ? 1 : 0)};\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  border-radius: 50%;\r\n  filter: drop-shadow(0px 4px 4px rgba(0, 0, 0, 0.25));\r\n  cursor: pointer;\r\n  background-color: ${({ theme }) => theme.colors.primary};\r\n  transition: visibility 200ms cubic-bezier(0.39, 0.575, 0.565, 1),\r\n    opacity 200ms cubic-bezier(0.39, 0.575, 0.565, 1);\r\n`;\r\n\r\nexport const PlayIcon = styled.svg`\r\n  width: 43px;\r\n  height: 43px;\r\n  cursor: pointer;\r\n`;","import { Game } from 'types/types';\r\nimport { useState } from 'react';\r\nimport { useAppDispatch, useAppSelector } from 'hooks/redux-hooks';\r\nimport {\r\n  addGameToFavorites,\r\n  removeGameFromFavorites,\r\n} from 'redux/games/gamesSlice';\r\nimport sprite from 'assets/icons.svg';\r\nimport * as S from './GameCard.styled';\r\n\r\ninterface GameCardProps {\r\n  game: Game;\r\n}\r\n\r\nconst GameCard = ({ game }: GameCardProps): JSX.Element => {\r\n  const favoriteGames = useAppSelector(state => state.games.favoriteGames);\r\n  const dispatch = useAppDispatch();\r\n\r\n  const [isSelected, setIsSelected] = useState(() => {\r\n    const isGameSelected = favoriteGames.find(\r\n      favoriteGame => favoriteGame.appId === game.appId\r\n    );\r\n    if (isGameSelected) {\r\n      return true;\r\n    }\r\n    return false;\r\n  });\r\n\r\n  const onClickToggleFavorite: React.MouseEventHandler<SVGSVGElement> = e => {\r\n    e.preventDefault();\r\n    setIsSelected(state => !state);\r\n    if (isSelected) {\r\n      dispatch(removeGameFromFavorites(game.appId));\r\n      return;\r\n    } else {\r\n      dispatch(addGameToFavorites(game));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <S.GameItem>\r\n      <S.GameLink to={`/${game.appId}`}>\r\n        <S.GameImage src={game.imgUrl} alt={game.title} />\r\n        <S.GameTitle>{game.title}</S.GameTitle>\r\n        <S.GameDate>{game.released || 'Unknown'}</S.GameDate>\r\n        <S.GamePrice>{game.price.trim() || 'Unknown'}</S.GamePrice>\r\n        <S.HeartIcon\r\n          isSelected={isSelected}\r\n          onClick={onClickToggleFavorite}\r\n          role=\"button\"\r\n        >\r\n          <use href={`${sprite}#icon-heart`} />\r\n        </S.HeartIcon>\r\n        <S.PlayIconContainer isSelected={isSelected}>\r\n          <S.PlayIcon>\r\n            <use href={`${sprite}#icon-play-circle`} />\r\n          </S.PlayIcon>\r\n        </S.PlayIconContainer>\r\n      </S.GameLink>\r\n    </S.GameItem>\r\n  );\r\n};\r\n\r\nexport { GameCard };\r\n","import styled from 'styled-components';\r\n\r\nexport const HomeSection = styled.section`\r\n  padding: 24px 0;\r\n  @media screen and (max-width: 1170px) {\r\n    padding: 15px 0;\r\n  }\r\n`;\r\n\r\nexport const HomeContainer = styled.div`\r\n  margin: 0 auto;\r\n  max-width: 1171px;\r\n  padding: 0 26px;\r\n  @media screen and (max-width: 1170px) {\r\n    max-width: 360px;\r\n    padding: 0 50px;\r\n  }\r\n`;\r\n\r\nexport const GamesList = styled.ul`\r\n  display: flex;\r\n  gap: 21px;\r\n  margin-bottom: 30px;\r\n  @media screen and (max-width: 1170px) {\r\n    flex-direction: column;\r\n  }\r\n`;\r\n","import { useEffect, useState } from 'react';\r\nimport { PaginationGames } from 'components/Pagination/Pagination';\r\nimport { useAppDispatch, useAppSelector } from 'hooks/redux-hooks';\r\nimport { GameCard } from '../GameCard/GameCard';\r\nimport { Spinner } from '../Spinner/Spinner';\r\nimport { paginationSliceItems } from 'utils/paginationSliceItems';\r\nimport { useLocation, useSearchParams } from 'react-router-dom';\r\nimport { setSortedGames } from 'redux/games/gamesSlice';\r\nimport { GamesList, HomeContainer, HomeSection } from './Home.styled';\r\n\r\nconst Home = (): JSX.Element => {\r\n  const location = useLocation();\r\n  const { games, isLoading, sortKey, sortFromLower } = useAppSelector(\r\n    state => state.games\r\n  );\r\n  const dispatch = useAppDispatch();\r\n  const [searchParams, setSearchParams] = useSearchParams();\r\n  const [currentPage, setCurrentPage] = useState<number>(() => {\r\n    const page = Number(searchParams.get('page'));\r\n    return page || 1;\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (currentPage !== 1) {\r\n      searchParams.set('page', String(currentPage));\r\n      setSearchParams(searchParams);\r\n    }\r\n  }, [currentPage]);\r\n\r\n  useEffect(() => {\r\n    dispatch(setSortedGames(location.pathname));\r\n    setCurrentPage(1);\r\n  }, [sortKey, sortFromLower]);\r\n\r\n  const [fromGameItem, toGameItem] = paginationSliceItems(\r\n    currentPage,\r\n    games.length\r\n  );\r\n\r\n  const filteredGames = games.slice(fromGameItem, toGameItem);\r\n\r\n  if (isLoading) {\r\n    return <Spinner />;\r\n  }\r\n\r\n  return (\r\n    <HomeSection>\r\n      <HomeContainer>\r\n        <GamesList>\r\n          {filteredGames.map(game => (\r\n            <GameCard key={game.appId} game={game} />\r\n          ))}\r\n        </GamesList>\r\n        {games.length > 4 && (\r\n          <PaginationGames\r\n            currentPage={currentPage}\r\n            setCurrentPage={setCurrentPage}\r\n            items={games}\r\n          />\r\n        )}\r\n      </HomeContainer>\r\n    </HomeSection>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import styled from \"styled-components\";\r\n\r\nexport const StyledPaginateContainer = styled.div`\r\n  .pagination {\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    gap: 8px;\r\n  }\r\n  .break-me {\r\n    cursor: default;\r\n  }\r\n  .link {\r\n    min-width: 30px;\r\n    min-height: 30px;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    padding: 5px;\r\n    border-radius: 50%;\r\n    background-color: #5b5e63;\r\n    border: none;\r\n    color: #fff;\r\n    cursor: pointer;\r\n    user-select: none;\r\n    font-size: 12px;\r\n    line-height: calc(15 / 12);\r\n  }\r\n  .active {\r\n    background-color: #17323a;\r\n  }\r\n  .previous,\r\n  .next {\r\n    min-width: 30px;\r\n    min-height: 30px;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    border-radius: 50%;\r\n    background-color: #5b5e63;\r\n  }\r\n`;\r\n\r\nexport const ArrowIcons = styled.svg`\r\n  width: 15px;\r\n  height: 15px;\r\n  display: flex;\r\n  align-items: center;\r\n`","import React from \"react\";\r\nimport Pagination from \"react-js-pagination\";\r\nimport { Game } from \"types/types\";\r\nimport sprite from \"assets/icons.svg\";\r\nimport * as S from \"./Pagination.styled\";\r\n\r\ninterface PaginationProps {\r\n  currentPage: number;\r\n  setCurrentPage: React.Dispatch<React.SetStateAction<number>>;\r\n  items: Array<Game>;\r\n}\r\n\r\nexport const PaginationGames = ({\r\n  currentPage,\r\n  setCurrentPage,\r\n  items,\r\n}: PaginationProps): JSX.Element => {\r\n  return (\r\n    <S.StyledPaginateContainer>\r\n      <Pagination\r\n        activePage={currentPage}\r\n        itemsCountPerPage={4}\r\n        totalItemsCount={items.length}\r\n        pageRangeDisplayed={3}\r\n        innerClass=\"pagination\"\r\n        itemClassPrev=\"previous\"\r\n        itemClassNext=\"next\"\r\n        itemClass=\"link\"\r\n        activeLinkClass=\"active\"\r\n        hideFirstLastPages={true}\r\n        prevPageText={\r\n          <S.ArrowIcons>\r\n            <use href={`${sprite}#icon-arrow-left`} />\r\n          </S.ArrowIcons>\r\n        }\r\n        nextPageText={\r\n          <S.ArrowIcons>\r\n            <use href={`${sprite}#icon-arrow-right`} />\r\n          </S.ArrowIcons>\r\n        }\r\n        onChange={(number: number) => setCurrentPage(number)}\r\n      />\r\n    </S.StyledPaginateContainer>\r\n  );\r\n};\r\n","const ITEMS_PER_PAGE = 4;\r\n\r\nexport const paginationSliceItems = (currentPage: number, length: number) => {\r\n  const fromGameItem = (currentPage - 1) * ITEMS_PER_PAGE;\r\n  const toGameItem =\r\n    currentPage === Math.ceil(length / ITEMS_PER_PAGE)\r\n      ? length\r\n      : currentPage * ITEMS_PER_PAGE;\r\n  return [fromGameItem, toGameItem];\r\n};\r\n"],"names":["GameItem","styled","theme","colors","secondary","GameLink","Link","GameImage","GameTitle","GameDate","GamePrice","HeartIcon","isSelected","PlayIconContainer","primary","PlayIcon","GameCard","game","favoriteGames","useAppSelector","state","games","dispatch","useAppDispatch","useState","find","favoriteGame","appId","setIsSelected","to","src","imgUrl","alt","title","released","price","trim","onClick","e","preventDefault","removeGameFromFavorites","addGameToFavorites","role","href","sprite","HomeSection","HomeContainer","GamesList","location","useLocation","isLoading","sortKey","sortFromLower","useSearchParams","searchParams","setSearchParams","Number","get","currentPage","setCurrentPage","useEffect","set","String","setSortedGames","pathname","paginationSliceItems","length","fromGameItem","toGameItem","filteredGames","slice","Spinner","map","Pagination","items","StyledPaginateContainer","ArrowIcons","PaginationGames","activePage","itemsCountPerPage","totalItemsCount","pageRangeDisplayed","innerClass","itemClassPrev","itemClassNext","itemClass","activeLinkClass","hideFirstLastPages","prevPageText","nextPageText","onChange","number","Math","ceil"],"sourceRoot":""}